-- Quotation
select distinct ru.name as Salesperson
              , so.date_order
              , so.name as Quote_No
              , cust.commercial_company_name as Customer_Name
              , order_desc.Description
              , so.amount_total as Sales_Amount_HKD
              , case when so.state='draft' then 'Outstading' when so.state='sale' then 'Completed' else so.state end as State
              , '' as Remark
from sale_order so
left join (select ru.id, rp.display_name as name from res_users ru
            join res_partner rp on ru.partner_id=rp.id) ru on so.user_id=ru.id
left join res_partner cust on so.partner_id=cust.id
left join (select sol.order_id, string_agg(pt.name, '/') as Description
        from sale_order_line sol
        join product_product pp on sol.product_id = pp.id
        join product_template pt on pp.product_tmpl_id = pt.id
        group by sol.order_id) order_desc on order_id = so.id
where (so.create_date>'2020-01-01')
--       and so.name='ATC200828-011'
order by so.name
;
-- Delivery Note
select distinct sp.scheduled_date as DN_Date
              , sp.name as DN_No
              , cust.commercial_company_name as Customer_Name
              , sp.origin as Sale_Order
              , case when sp.state='assigned' then 'outstanding'
                  when sp.state='done' then 'completed'
                  else sp.state
                end as state
              , '' as Remark
from stock_picking sp
left join res_partner cust on sp.partner_id=cust.id
where (sp.create_date>'2020-01-01')
--       and so.name='ATC200828-011'
order by sp.name
;

-- Invoice
select distinct ru.name as Salesperson, so.name as Ref_Quote_No, '' as DN_No, ai.date_invoice as Inv_Date
     , ai.number as Inv_No, cust.commercial_company_name as Customer_Name
 	 , order_desc.Description, '' as Salesman, '' as Payment_Terms
     , 0 as Sales_Amount_RMB
     , 0 as Sales_Amount_HKD
     , 0 as Cost, 0 as Gross_Profit
     , case when ai.state='paid' then ai.amount_total else 0 end as Deposit
     , case when ai.state='open' then ai.amount_total else 0 end as Balance
     , ap.payment_date as Pay_Date
     , case when ai.state='open' then 'outstanding' when ai.state='paid' then 'completed' end as State
     , ap.communication as CHQ, '' as Remark, so.*
from sale_order so
left join (select ru.id, rp.display_name as name from res_users ru
            join res_partner rp on ru.partner_id=rp.id) ru on so.user_id=ru.id
join (select ai.*
    from account_invoice ai
    where not exists(select 1 from account_invoice ai1 where ai.number=ai1.origin)
        and not exists(select 1 from account_invoice ai1 where ai.origin=ai1.number)) ai on ai.origin=so.name
left join res_partner cust on so.partner_id=cust.id
left join (select sol.order_id, string_agg(pt.name, '/') as Description
        from sale_order_line sol
        join product_product pp on sol.product_id = pp.id
        join product_template pt on pp.product_tmpl_id = pt.id
        group by sol.order_id) order_desc on order_id = so.id
left join (select invoice_id, payment_date, ap.communication
        from account_invoice_payment_rel aipr
        join account_payment ap on aipr.payment_id = ap.id
        ) ap on ai.id=ap.invoice_id
where (so.create_date>'2020-01-01' or date_invoice>'2020-01-01')
--       and so.name='ATC200828-011'
order by so.name
;
